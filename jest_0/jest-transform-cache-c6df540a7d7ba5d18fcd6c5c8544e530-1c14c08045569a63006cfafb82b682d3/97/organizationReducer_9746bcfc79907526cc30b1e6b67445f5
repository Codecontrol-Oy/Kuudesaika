'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};exports.default =


reducer;var _constants = require('../constants.js');var constants = _interopRequireWildcard(_constants);function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}var initialState = {};function reducer() {var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;var action = arguments[1];
    switch (action.type) {
        case constants.ORGANIZATION_FETCH:{
                return state;
            }
        case constants.ORGANIZATION_FETCH_PENDING:{
                return _extends({}, state);
            }
        case constants.ORGANIZATION_FETCH_REJECTED:{
                return _extends({}, state);
            }
        case constants.ORGANIZATION_FETCH_FULFILLED:{
                return _extends({}, state, { selected_organization: action.payload.data });
            }
        case constants.ORGANIZATION_FETCH_LIST:{
                return state;
            }
        case constants.ORGANIZATION_FETCH_LIST_PENDING:{
                return _extends({}, state);
            }
        case constants.ORGANIZATION_FETCH_LIST_REJECTED:{
                return _extends({}, state);
            }
        case constants.ORGANIZATION_FETCH_LIST_FULFILLED:{
                return _extends({}, state, { organizations: action.payload.data });
            }
        default:{
                return state;
            }}

}