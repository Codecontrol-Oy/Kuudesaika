'use strict';



jest.mock('react-router', function () {return { browserHistory: { push: jest.fn() } };});var _react = require('react');var _react2 = _interopRequireDefault(_react);var _LandingPageContainer = require('./LandingPageContainer');var _LandingPageContainer2 = _interopRequireDefault(_LandingPageContainer);var _sinon = require('sinon');var _sinon2 = _interopRequireDefault(_sinon);var _reactRouter = require('react-router');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe("<LandingPageContainer />", function () {

    it("Matches snapshot", function () {
        var landingPageContainer = shallow(
        _react2.default.createElement(_LandingPageContainer2.default, null));

        expect(landingPageContainer).toMatchSnapshot();
    });

    it("Should render city cards", function () {
        var landingPageContainer = shallow(
        _react2.default.createElement(_LandingPageContainer2.default, null));

        expect(landingPageContainer.find('Card').length).toEqual(6);
    });

    it("Should redirect to city on click", function () {
        var landingPageContainer = shallow(
        _react2.default.createElement(_LandingPageContainer2.default, null));

        var callback = _sinon2.default.spy(landingPageContainer.instance(), 'onSelectCity');
        var organizationLink = landingPageContainer.find('Card');
        organizationLink.first().simulate('click');
        expect(callback.calledOnce).toEqual(true);
        expect(_reactRouter.browserHistory.push).toHaveBeenCalled();
    });
});