'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.default = undefined;var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _dec, _class;var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _reactRedux = require('react-redux');
var _global = require('../../theme/global.scss');var _global2 = _interopRequireDefault(_global);
var _axios = require('axios');var _axios2 = _interopRequireDefault(_axios);
var _Section = require('grommet/components/Section');var _Section2 = _interopRequireDefault(_Section);
var _Anchor = require('grommet/components/Anchor');var _Anchor2 = _interopRequireDefault(_Anchor);
var _Article = require('grommet/components/Article');var _Article2 = _interopRequireDefault(_Article);
var _Label = require('grommet/components/Label');var _Label2 = _interopRequireDefault(_Label);
var _Timestamp = require('grommet/components/Timestamp');var _Timestamp2 = _interopRequireDefault(_Timestamp);
var _Accordion = require('grommet/components/Accordion');var _Accordion2 = _interopRequireDefault(_Accordion);
var _AccordionPanel = require('grommet/components/AccordionPanel');var _AccordionPanel2 = _interopRequireDefault(_AccordionPanel);
var _Heading = require('grommet/components/Heading');var _Heading2 = _interopRequireDefault(_Heading);
var _components = require('../../components');
var _reactRouter = require('react-router');
var _actions = require('../../actions');
var _CircleInformation = require('grommet/components/icons/base/CircleInformation');var _CircleInformation2 = _interopRequireDefault(_CircleInformation);
var _FormRefresh = require('grommet/components/icons/base/FormRefresh');var _FormRefresh2 = _interopRequireDefault(_FormRefresh);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var







OrganizationContainer = (_dec = (0, _reactRedux.connect)(function (store) {return { organization: store.organization };}), _dec(_class = function (_React$Component) {_inherits(OrganizationContainer, _React$Component);
    function OrganizationContainer(props) {_classCallCheck(this, OrganizationContainer);var _this = _possibleConstructorReturn(this, (OrganizationContainer.__proto__ || Object.getPrototypeOf(OrganizationContainer)).call(this,
        props));_this.














        componentDidMount = function () {
            var organization_id = _this.props.params.id;
            (0, _actions.setCity)(_this.props.params.city);
            _this.setState({ fetchStarted: false }, function () {
                (0, _actions.fetchOrganizations)();
                (0, _actions.fetchOrganization)(organization_id);
            });
        };_this.

        componentDidUpdate = function () {
            if (_this.props.organization.selected_organization && !_this.state.fetchStarted) {
                _this.setState({ fetchStarted: true }, function () {
                    if (this.props.organization.selected_organization.events.length > 0) {
                        this.fetchEvents(this.props.organization.selected_organization);
                    }
                    if (this.props.organization.selected_organization.posts.length > 0) {
                        this.fetchOrganizationPosts(this.props.organization.selected_organization);
                    }
                });
            }

        };_this.

        onAccordionChange = function (e) {
            _this.fetchActions(e);
        };_this.

        onPostAccordionChange = function (e) {
            _this.fetchPostActions(e);
            _this.setState({ currentPost: e });
        };_this.

        fetchMore = function () {
            var offset = _this.state.offset;
            offset = offset + 5;
            _this.setState({ offset: offset }, _this.fetchEvents(_this.props.organization.selected_organization));
        };_this.

        fetchMoreActions = function () {
            var offset = _this.state.actionOffset;
            offset = offset + 5;
            _this.setState({ actionOffset: offset }, _this.fetchPostAction());
        };_this.

        gatherEvents = function () {
            var eventListing = [];
            if (_this.state.events) {
                _this.state.events.sort(function (a, b) {return b.origin_id - a.origin_id;}).
                map(function (event) {
                    var actionList = [];
                    event.actionList.sort(function (a, b) {return a.ordering - b.ordering;}).
                    map(function (action) {
                        action.contents.map(function (para) {
                            actionList.push(_react2.default.createElement(_Section2.default, { key: para.origin_id + '_Article' },
                                _react2.default.createElement(_Heading2.default, { tag: "h5",
                                        uppercase: true }, action.title),

                                action.fetchedCase &&
                                _react2.default.createElement(_Anchor2.default, { href: '#', icon: _react2.default.createElement(_CircleInformation2.default, null),
                                    primary: true,
                                    label: 'Siirry asiaan',
                                    onClick: function onClick() {return self.onLinkAction(action.fetchedCase.id);} }),

                                action.fetchedPost && _react2.default.createElement(_Article2.default, null, _react2.default.createElement(_Label2.default, null, 'Lausunnonantaja: ', action.fetchedPost.label)),
                                _react2.default.createElement(_Article2.default, null, _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: para.hypertext } }), _react2.default.createElement(_components.ActionResolution, { resolution: action.resolution }))));

                        });
                    });
                    eventListing.push(_react2.default.createElement(_AccordionPanel2.default, {
                            key: event.id + '_eventValue',
                            heading: _react2.default.createElement(_Heading2.default, { tag: "h5" }, 'Kokousp\xE4iv\xE4m\xE4\xE4r\xE4 ', _react2.default.createElement(_Timestamp2.default, { fields: "date", value: event.start_date })) },
                        actionList));

                });
            }
            return eventListing;
        };_this.

        gatherPosts = function () {
            var postListing = [];
            if (_this.state.posts) {
                _this.state.posts.map(function (post) {
                    var actionComponents = [];
                    post.actionList.sort(function (a, b) {return b.ordering - a.ordering;}).
                    map(function (action) {
                        action.contents.map(function (para) {
                            actionComponents.push(_react2.default.createElement(_Section2.default, { key: para.origin_id + '_PostArticle' },
                                _react2.default.createElement(_Heading2.default, { tag: "h5",
                                        uppercase: true }, action.title),

                                action.fetchedCase ? _react2.default.createElement(_Article2.default, null, '(', action.fetchedCase.register_id, ') ', action.fetchedCase.title, ' ') : '',
                                action.fetchedPost ? _react2.default.createElement(_Article2.default, null, _react2.default.createElement(_Label2.default, null, 'Lausunnonantaja: ', action.fetchedPost.label)) : '',
                                _react2.default.createElement(_Article2.default, null, _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: para.hypertext } }))));

                        });
                    });
                    postListing.push(_react2.default.createElement(_AccordionPanel2.default, {
                            key: post.id + '_postValue',
                            heading: _react2.default.createElement(_Label2.default, null, post.label) },
                        actionComponents,
                        actionComponents.length !== post.actionList.length, ' ', _react2.default.createElement(_Anchor2.default, { className: _global2.default.marginTop, primary: true, icon: _react2.default.createElement(_FormRefresh2.default, null), onClick: self.fetchMoreActions }, 'Hae Lis\xE4\xE4')));

                });
            }
            return postListing;
        };_this.

        fetchEvents = function (organization) {
            var offset = 0;
            if (_this.state.events) {
                offset = _this.state.offset + 5;
            }
            for (var i = organization.events.length - offset; i > organization.events.length - _this.state.limit - offset; i--) {
                _this.getEvent(organization, i);
            }
        };_this.


        getEvent = function (organization, i) {
            _axios2.default.get(organization.events[i - 1]).
            then(function (eventResponse) {
                var eventList = self.state.events || [];
                var currentEvent = eventResponse.data;
                currentEvent.actionList = [];
                eventList.push(currentEvent);
                self.setState({ events: eventList });
            });
        };_this.

        fetchActions = function (index) {
            if (typeof index !== 'undefined') {
                var event = _this.state.events[index];
                event.actions.map(function (action) {
                    _axios2.default.get(action).
                    then(function (actionResponse) {
                        var existingEvents = self.state.events;
                        existingEvents[index].actionList.push(actionResponse.data);
                        self.setState({ events: existingEvents }, function () {
                            if (actionResponse.data.post) {
                                this.fetchActionPosts(actionResponse.data.post, actionResponse.data.id, index);
                            }
                            if (actionResponse.data.case) {
                                this.fetchCase(actionResponse.data.case, actionResponse.data.id, index);
                            }
                        });
                    });
                });
            }
        };_this.

        fetchPostAction = function () {
            var index = _this.state.currentPost;
            if (typeof index !== 'undefined') {
                var post = _this.state.posts[index];
                var offset = _this.state.actionOffset + 2;
                for (var i = post.actions.length - offset; i > post.actions.length - _this.state.actionLimit - offset; i--) {
                    _this.getPostAction(post.actions[i], index);
                }
            }
        };_this.

        getPostAction = function (action, index) {
            _axios2.default.get(action).
            then(function (actionResponse) {
                var existingPosts = self.state.posts;
                existingPosts[index].actionList.push(actionResponse.data);
                self.setState({ posts: existingPosts });
            });
        };_this.

        fetchPostActions = function (index) {
            if (typeof index !== 'undefined') {
                var post = _this.state.posts[index];

                post.actions.map(function (action, i) {
                    if (i < 2) {
                        _axios2.default.get(action).
                        then(function (actionResponse) {
                            var existingPosts = self.state.posts;
                            existingPosts[index].actionList.push(actionResponse.data);
                            self.setState({ posts: existingPosts });
                        });
                    }
                });
            }
        };_this.

        fetchOrganizationPosts = function (organization) {
            organization.posts.map(function (post) {
                _axios2.default.get(post).
                then(function (postResponse) {
                    var postList = self.state.posts || [];
                    var currentPost = postResponse.data;
                    currentPost.actionList = [];
                    postList.push(currentPost);
                    self.setState({ posts: postList });
                });
            });
        };_this.

        fetchActionPosts = function (actionPost, action_id, eventIndex) {
            _axios2.default.get(actionPost).
            then(function (postResponse) {
                var events = self.state.events;
                for (var i = 0; i < events[eventIndex].actionList.length - 1; i++) {
                    if (events[eventIndex].actionList[i].id === action_id) {
                        events[eventIndex].actionList[i].fetchedPost = postResponse.data;
                    }
                }
                self.setState({ events: events });
            });
        };_this.

        fetchCase = function (actionCase, action_id, eventIndex) {
            _axios2.default.get(actionCase).
            then(function (caseResponse) {
                var events = self.state.events;
                for (var i = 0; i < events[eventIndex].actionList.length - 1; i++) {
                    if (events[eventIndex].actionList[i].id === action_id) {
                        events[eventIndex].actionList[i].fetchedCase = caseResponse.data;
                    }
                }
                self.setState({ events: events });
            });
        };_this.

        onLinkAction = function (id) {
            _reactRouter.browserHistory.push('/' + (0, _actions.getCity)() + '/asia/' + id);
        };_this.state = { events: null, posts: null, renderObjects: null, fetchStarted: false, limit: 5, offset: 0, selectedOrganization: null, actionOffset: 0, actionLimit: 2 };self = _this;return _this;}_createClass(OrganizationContainer, [{ key: 'render', value: function render()

        {
            var events = this.gatherEvents();
            var posts = this.gatherPosts();

            return (
                _react2.default.createElement(_Section2.default, { pad: 'small' },
                    this.props.organization.selected_organization && this.props.organization.organizations ?
                    _react2.default.createElement('div', null,
                        _react2.default.createElement(_Heading2.default, { tag: "h3", uppercase: true, className: _global2.default.sectionTitle }, this.props.organization.selected_organization.name),
                        _react2.default.createElement(_Heading2.default, { tag: "h4", className: _global2.default.marginTop, uppercase: true }, 'Kokoukset'),
                        events && events.length > 0 ?
                        _react2.default.createElement(_Accordion2.default, { onActive: this.onAccordionChange },
                            events) :

                        _react2.default.createElement(_Label2.default, null, 'Ei kokouksia'),


                        this.props.organization.selected_organization.events && this.state.events &&
                        this.props.organization.selected_organization.events.length !== this.state.events.length &&
                        _react2.default.createElement(_Anchor2.default, { className: _global2.default.marginTop, primary: true, icon: _react2.default.createElement(_FormRefresh2.default, null), onClick: this.fetchMore }, 'Hae Lis\xE4\xE4'),

                        _react2.default.createElement(_Heading2.default, { className: _global2.default.marginTop, tag: "h4", uppercase: true }, 'Lausunnot, M\xE4\xE4r\xE4ykset ja kannanotot'),
                        posts && posts.length > 0 ? _react2.default.createElement(_Accordion2.default, { onActive: this.onPostAccordionChange },
                            posts) :

                        _react2.default.createElement(_Label2.default, null, 'Ei lausuntoja, m\xE4\xE4r\xE4yksi\xE4 tai kannanottoja'),
                        _react2.default.createElement(_Heading2.default, { tag: "h4", uppercase: true, className: _global2.default.marginTop }, 'Organisaatiokaavio'),
                        this.props.organization.organizations && this.props.organization.selected_organization ?
                        _react2.default.createElement(_components.OrganizationMap, { organization: this.props.organization.selected_organization, organizations: this.props.organization.organizations.results }) :
                        null) :

                    _react2.default.createElement(_components.Loader, null)));


        } }]);return OrganizationContainer;}(_react2.default.Component)) || _class);exports.default = OrganizationContainer;